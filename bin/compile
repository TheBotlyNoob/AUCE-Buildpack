#!/usr/bin/env bash

set -eu

serverport=1234
NGROK_OPTS=""

indent() {
  sed -u 's/^/       /'
}

export_env_dir() {
  env_dir=$1
  whitelist_regex=${2:-''}
  blacklist_regex=${3:-'^(PATH|GIT_DIR|CPATH|CPPATH|LD_PRELOAD|LIBRARY_PATH|JAVA_OPTS)$'}
  if [ -d "$env_dir" ]; then
    for e in $(ls $env_dir); do
      echo "$e" | grep -E "$whitelist_regex" | grep -qvE "$blacklist_regex" &&
      export "$e=$(cat $env_dir/$e)"
      :
    done
  fi
}

BP_DIR="$(cd "$(dirname "$0")" && pwd)"
BUILD_DIR=$1
CACHE_DIR=$2
OPT_DIR=$BP_DIR/../opt/
export_env_dir $3

if [ ! -f $BUILD_DIR/Impostor.Server.exe ]; then
  echo "You Need To Have The Imposter.Server.exe File In Your Root Directory!"
  exit 1
elif [ -z "$NGROK_API_TOKEN" ]; then
  echo "You Must Set The NGROK_API_TOKEN Config Var To Create A TCP Tunnel!"
  exit 1
fi

echo -n "-----> Installing ngrok... "
curl --silent -o ngrok.zip -L "https://bin.equinox.io/c/4VmDzA7iaHb/ngrok-stable-linux-amd64.zip" | indent
unzip ngrok.zip -d $BUILD_DIR/bin > /dev/null 2>&1
echo "done"

# Start the TCP tunnel
ngrok_cmd="${BUILD_DIR}/bin/ngrok tcp -authtoken $NGROK_API_TOKEN -log stdout --log-level debug ${NGROK_OPTS} ${serverport}"
echo "Starting ngrok..."
${BUILD_DIR}/bin/ngrok tcp -authtoken $NGROK_API_TOKEN -log stdout --log-level debug ${NGROK_OPTS} ${serverport} | tee ${BUILD_DIR}/ngrok.log

#echo -n "-----> Starting the server..."
#Xorg "${BUILD_DIR}/vendor/bin/wine64 ${BUILD_DIR}/Impostor.Server.exe"
